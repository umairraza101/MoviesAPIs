---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/api/v1/auth/sign_in":
    post:
      summary: Sign in user
      tags:
      - Session
      parameters:
      - name: email
        in: query
        schema:
          type: string
      - name: password
        in: query
        schema:
          type: string
      responses:
        '201':
          description: User signed In
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                  password:
                    type: string
                required:
                - email
                - password
            application/xml:
              schema:
                type: object
                properties:
                  email:
                    type: string
                  password:
                    type: string
                required:
                - email
                - password
  "/api/v1/auth":
    post:
      summary: Sign Up user
      tags:
      - Session
      parameters:
      - name: email
        in: query
        schema:
          type: string
      - name: password
        in: query
        schema:
          type: string
      - name: password_confirmation
        in: query
        schema:
          type: string
      - name: role
        in: query
        schema:
          type: integer
      responses:
        '201':
          description: User signed Up
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                  password:
                    type: string
                  password_confirmation:
                    type: string
                  role:
                    type: integer
                required:
                - email
                - password
                - password_confirmation
            application/xml:
              schema:
                type: object
                properties:
                  email:
                    type: string
                  password:
                    type: string
                  password_confirmation:
                    type: string
                  role:
                    type: integer
                required:
                - email
                - password
                - password_confirmation
  "/api/v1/movie_catalogs":
    get:
      summary: get movie catalog
      responses:
        '200':
          description: movie catalog
    post:
      summary: create movie catalog
      parameters:
      - name: movie_id
        in: formdata
        schema:
          type: integer
      - name: time
        in: formdata
        schema:
          type: datetime
      - name: price
        in: formdata
        schema:
          type: decimal
      responses:
        '201':
          description: movie catalog created
          content:
            application/json:
              schema:
                type: object
                properties:
                  movie_id:
                    type: integer
                  time:
                    type: datetime
                  price:
                    type: decimal
                required:
                - movie_id
            application/xml:
              schema:
                type: object
                properties:
                  movie_id:
                    type: integer
                  time:
                    type: datetime
                  price:
                    type: decimal
                required:
                - movie_id
        '422':
          description: invalid request
  "/api/v1/movie_catalogs/{id}":
    put:
      summary: update movie catalog
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      - name: price
        in: formdata
        schema:
          type: decimal
      - name: time
        in: formdata
        schema:
          type: datetime
      responses:
        '202':
          description: Movie Updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  time:
                    type: datetime
                  price:
                    type: decimal
                required:
                - id
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  time:
                    type: datetime
                  price:
                    type: decimal
                required:
                - id
        '404':
          description: movie not found
    delete:
      summary: Delete movie
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '202':
          description: Movie Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                required:
                - id
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                required:
                - id
        '404':
          description: movie not found
  "/api/v1/movies/fetch_movies":
    get:
      summary: get all movies
      responses:
        '200':
          description: fetch movies
  "/api/v1/movies/{id}":
    get:
      summary: get movie
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: movie
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                required:
                - id
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                required:
                - id
  "/api/v1/movies/{id}/rating":
    post:
      summary: get movie rating
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: movie
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                required:
                - id
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                required:
                - id
securityDefinitions:
  api_key:
    description: "..."
    type: apiKey
    name: Authorization
    in: header
  BasicAuth:
    type: basic
security:
  basicAuth: []
servers:
- url: http://localhost:3000/
  variables:
    defaultHost:
      default: http://localhost:3000/
